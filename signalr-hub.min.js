angular.module("SignalR",[]).constant("$",$).factory("Hub",["$",function(n){function o(o){var r=null;return r=o&&o.rootPath?n.hubConnection(o.rootPath,{useDefaultPath:!1}):n.hubConnection(),r.logging=o&&o.logging?!0:!1,r}function r(n){var r=!(n&&n.useSharedConnection===!1);return r?"undefined"==typeof t[n.rootPath]?t[n.rootPath]=o(n):t[n.rootPath]:o(n)}var t=[];return function(o,t){var e=this;return e.connection=r(t),e.proxy=e.connection.createHubProxy(o),e.on=function(n,o){e.proxy.on(n,o)},e.invoke=function(){return e.proxy.invoke.apply(e.proxy,arguments)},e.disconnect=function(){e.connection.stop()},e.connect=function(){return e.connection.start(t.transport?{transport:t.transport}:null)},t&&t.listeners&&angular.forEach(t.listeners,function(n,o){e.on(o,n)}),t&&t.methods&&angular.forEach(t.methods,function(o){e[o]=function(){var r=n.makeArray(arguments);return r.unshift(o),e.promise.then(function(){return e.invoke.apply(e,r)})}}),t&&t.queryParams&&(e.connection.qs=t.queryParams),t&&t.errorHandler&&e.connection.error(t.errorHandler),e.promise=e.connect(),e}}]);